// Code generated by ocli-codegen DO NOT EDIT.
// Package cli provides primitives to interact with the Open CLI Spec-Compliant CLI.

package cli

import (
  "context"

  urfavecli "github.com/urfave/cli/v3"
)

func New(impl CLIHandlersInterface, version string) *urfavecli.Command {

  pleasantriesCmd := &urfavecli.Command{}
  pleasantriesFarewellCmd := &urfavecli.Command{}
  pleasantriesGreetCmd := &urfavecli.Command{}

	pleasantriesCmd.Name = "pleasantries"
	pleasantriesCmd.UsageText = "pleasantries {command} <name> [flags]"
	pleasantriesCmd.Usage = "A fun CLI to greet or bid farewell"
	pleasantriesCmd.Commands = []*urfavecli.Command{
		pleasantriesFarewellCmd,
		pleasantriesGreetCmd,
	}

	pleasantriesFarewellCmd.Name = "farewell"
	pleasantriesFarewellCmd.UsageText = "pleasantries farewell <name> [flags]"
	pleasantriesFarewellCmd.Usage = "Say goodbye"
	pleasantriesFarewellCmd.Flags = []urfavecli.Flag{
		&urfavecli.StringFlag{
			Name: "language",
			Usage: "The language of the greeting",
			Value: "english",
			Hidden: false,
		},
	}
  pleasantriesFarewellCmd.Action = func(ctx context.Context, cmd *urfavecli.Command) error {
   
    
		var args PleasantriesFarewellArgs
		if cmd.NArg() < 1 {
			return urfavecli.Exit("missing required arg <name>", 2)
		}
		args.Name = cmd.Args().Get(0)
    
		var flags PleasantriesFarewellFlags
		flags.Language = cmd.String("language")

		var validFlagChoice bool
		validFlagChoice = validateChoices(
			[]string{
				"english",
				"spanish",
				"",
			},
			flags.Language,
		)
		if !validFlagChoice {
			return urfavecli.Exit("invalid value for flag --language", 2)
		}

    return impl.PleasantriesFarewell(ctx, cmd, args, flags)
  }

	pleasantriesGreetCmd.Name = "greet"
	pleasantriesGreetCmd.UsageText = "pleasantries greet <name> [flags]"
	pleasantriesGreetCmd.Usage = "Say hello"
	pleasantriesGreetCmd.Flags = []urfavecli.Flag{
		&urfavecli.StringFlag{
			Name: "language",
			Usage: "The language of the greeting",
			Value: "english",
			Hidden: false,
		},
	}
  pleasantriesGreetCmd.Action = func(ctx context.Context, cmd *urfavecli.Command) error {
   
    
		var args PleasantriesGreetArgs
		if cmd.NArg() < 1 {
			return urfavecli.Exit("missing required arg <name>", 2)
		}
		args.Name = cmd.Args().Get(0)
    
		var flags PleasantriesGreetFlags
		flags.Language = cmd.String("language")

		var validFlagChoice bool
		validFlagChoice = validateChoices(
			[]string{
				"english",
				"spanish",
				"",
			},
			flags.Language,
		)
		if !validFlagChoice {
			return urfavecli.Exit("invalid value for flag --language", 2)
		}

    return impl.PleasantriesGreet(ctx, cmd, args, flags)
  }



  pleasantriesCmd.Version = version
  return pleasantriesCmd
}
