{{- template "commandVar" .}}
{{- template "commandProps" . -}}

{{define "commandVar" -}}
{{- $node := . }}
  {{$node.Command.Name | CamelCase}}Cmd := &urfavecli.Command{}
{{- range $i, $subCmd := $node.Commands}}
{{- template "commandVar" $subCmd}}
{{- end}}

{{- end}}
{{- /* end of commandVar template */}}

{{define "commandProps" -}}
{{$cmd := .Command}}

  {{/* SET COMMAND NAME */ -}}
  {{$cmd.Name | CamelCase}}Cmd.Name = "{{$cmd.Name | EscapeString}}"
  {{/* SET COMMAND USAGE TEXT */ -}}
  {{$cmd.Name | CamelCase}}Cmd.UsageText = "{{$cmd.Line | EscapeString}}"

  {{- /* SET COMMAND SUMMARY */}}
  {{- if $cmd.Summary}}
  {{$cmd.Name | CamelCase}}Cmd.Usage = "{{$cmd.Summary | EscapeString}}"
  {{- else if $cmd.Description}}
  {{$cmd.Name | CamelCase}}Cmd.Usage = "{{$cmd.Summary | EscapeString}}"
  {{- end}}

  {{- /* SET COMMAND ALIASES */}}
  {{- if $cmd.Aliases}}
  {{$cmd.Name | CamelCase}}Cmd.Aliases = []string{
  {{- range $cmd.Aliases}}
    "{{ . }}",
  {{- end}}
  }
  {{- end}}

  {{- /* SET COMMAND SUBCOMMANDS */}}
  {{- if .Commands }}
  {{$cmd.Name | CamelCase}}Cmd.Commands = []*urfavecli.Command{
    {{- range .Commands}}
    {{.Command.Name | CamelCase}}Cmd,
    {{- end}}
  }
  {{- end}}

  {{- /* SET COMMAND ACTION */}}
  {{- if not .Command.Group}}
  {{$cmd.Name | CamelCase}}Cmd.Action = {{template "cmd_handler.tmpl" $cmd}}
  {{- end}}
{{- range $i, $subCmd := .Commands}}
{{- template "commandProps" $subCmd}}
{{- end}}

{{- end}}
{{- /* end of commandProps template */}}